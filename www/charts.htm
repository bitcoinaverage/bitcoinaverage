<!DOCTYPE html>
<html lang="en">
<head>
    <title>Charts | BitcoinAverage - Bitcoin Price Index</title>

    <meta name="description" content="BitcoinAverage Price Index Charts provide detailed bitcoin price and trading volume history.">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="keywords" content="bitcoin price, bitcoin price index, bitcoin live price, bitcoin live rate, bitcoin average price,
    bitcoin mean price, bitcoin exchange, bitcoin average rate, bitcoin exchange rate, bitcoin weighted average, bitcoin weighted average price,
    bitcoin alerts, bitcoin price alerts,
    bitcoin calculator, bitcoin price calculator, bitcoin converter, bitcoin price converter, bitcoin cost,  bitcoin value, bitcoin worth,
    BTC price, BTC converter, BTC cost, BTC value, BTC worth,
    BTC mean price, BTC exchange, BTC rate, BTC average rate, BTC exchange rate,
    XBT price, XBT converter, XBT cost, XBT value, XBT worth,
    XBT mean price, XBT exchange, XBT rate, XBT average rate, XBT exchange rate,
    bitcoin markets, bitcoin currency markets,
    bitcoin volume, bitcoin trading volume, bitcoin volume charts, bitcoin volume history, bitcoin trading volume history, bitcoin market volume,
    bitcoin price history, bitcoin rate history, bitcoin price charts, bitcoin trading history, bitcoin market history, bitcoin exchanges history,
    bitcoin USD exchange rate, BTC USD exchange rate, XBT USD exchange rate, bitcoin dollar exchange rate,
    bitcoin EUR exchange rate, BTC EUR exchange rate, XBT EUR exchange rate, bitcoin euro exchange rate,
    bitcoin GBP exchange rate, BTC GBP exchange rate, XBT GBP exchange rate, bitcoin sterling exchange rate,
    bitcoin CNY exchange rate, BTC CNY exchange rate, XBT CNY exchange rate, bitcoin renminbi exchange rate,
    bitcoin CAD exchange rate, BTC CAD exchange rate, XBT CAD exchange rate, bitcoin canadian dollar exchange rate,
    bitcoin API, bitcoin rate API, bitcoin price API, bitcoin price index API,
    BTC API, BTC rate API, BTC price API, BTC price index API,
    bitcoin price" />

    <link rel="author" href="https://github.com/bitcoinaverage" />
    <link rel="publisher" href="https://plus.google.com/+BitcoinaveragePriceIndex" />
    <link rel="alternate" type="application/json" href="https://api.bitcoinaverage.com/all" title="full API data for BitcoinAverage Price Index" />
    <link rel="canonical" href="http://bitcoinaverage.com/price/" />
    <link rel="help" href="https://bitcoinaverage.com/faq.htm" title="BitcoinAverage FAQ" />
    <link rel="dns-prefetch" href="https://api.bitcoinaverage.com" />
    <link rel="shortcut icon" href="https://bitcoinaverage.com/favicon.ico" />

    <meta property="og:locale" content="en_US"/>
    <meta property="og:type" content="website"/>
    <meta property="og:title" content="BitcoinAverage Price Index Charts - BitcoinAverage"/>
    <meta property="og:description" content="BitcoinAverage Price Index Charts provide detailed bitcoin price and trading volumes history."/>
    <meta property="og:site_name" content="BitcoinAverage"/>
    <meta property="og:url" content="https://bitcoinaverage.com/"/>
    <meta property="og:image" content="https://bitcoinaverage.com/img/logo_full.png"/>

    <meta name="twitter:card" content="summary"/>
    <meta name="twitter:title" content="BitcoinAverage Price Index Charts - BitcoinAverage"/>
    <meta name="twitter:description" content="BitcoinAverage Price Index Charts provide detailed bitcoin price and trading volumes history."/>
    <meta name="twitter:site" content="@BitcoinAverage"/>
    <meta name="twitter:site:id" content="1620115130"/>
    <meta name="twitter:creator" content="@BitcoinAverage"/>
    <meta name="twitter:creator:id" content="1620115130"/>
    <meta name="twitter:image" content="https://bitcoinaverage.com/img/logo_full.png"/>

    <link href="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,400italic,600,600italic&subset=latin,cyrillic-ext' rel='stylesheet' type='text/css'>
    <link href="css/font-awesome.3.2.1/font-awesome.css" rel="stylesheet" type="text/css" />
    <link href="css/lightbox.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="js/lib/jquery.cookie.js"></script>
    <script type="text/javascript" src="js/lib/highstock.js"></script>
    <script type="text/javascript" src="js/lib/highstock.exporting.js"></script>
    <script type="text/javascript" src="js/lib/lightbox.js"></script>

    <link href="css/styles.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript" src="js/config.js"></script>
    <script type="text/javascript" src="js/fiat_data.js"></script>
    <script type="text/javascript" src="js/helpers.js"></script>
    <script type="text/javascript" src="js/currency_shared_render.js"></script>

    <script type="text/javascript">

var legendSlots = 20;

var API_data = {};
if (typeof config.apiIndexUrl == 'undefined' || config.apiIndexUrl == ''){
    alert('API URL config value empty!');
}
if (config.apiIndexUrl[config.apiIndexUrl.length-1] != '/') {
    config.apiIndexUrl = config.apiIndexUrl + '/';
}
if (config.apiHistoryIndexUrl[config.apiHistoryIndexUrl.length-1] != '/') {
    config.apiHistoryIndexUrl = config.apiHistoryIndexUrl + '/';
}

var firstRenderDone = false;
var currencyCode;
var chartMode;
var rangesArray = { '1h' : 0 , '12h' : 1 , '1d' : 2 , '1w' : 3 , '1m' : 4 , '3m' : 5 , '1y' : 6 , 'all' : 7 };
var defaultPriceSelectedRangeValue = rangesArray['1d']
var defaultVolumesSelectedRangeValue = rangesArray['1m']
var currentPriceSelectedRangeValue = defaultPriceSelectedRangeValue;
var currentVolumesSelectedRangeValue = defaultVolumesSelectedRangeValue;
// these buttons are common for both charts
var buttons = [{
    type: 'minute',
    count: 60,
    text: '1h'
    },
    {
    type: 'minute',
    count: 60 * 12,
    text: '12h'
    },
    {
    type: 'day',
    count: 1,
    text: '1d'
    },
    {
    type: 'week',
    count: 1,
    text: '1w'
    },
    {
    type: 'month',
    count: 1,
    text: '1m'
    },
    {
    type: 'month',
    count: 3,
    text: '3m'
    },
    {
    type: 'year',
    count: 1,
    text: '1y'
    },
    {
    type: 'all',
    count: 1,
    text: 'All  '
    }];

var parseDate = function(dateString){
    var parts = dateString.split(' ');
    var dateParts = parts[0].split('-');
    if (typeof parts[1] != 'undefined') {
        var timeParts = parts[1].split(':');
    } else {
        var timeParts = [0,0,0];
    }
    var result = new Date(dateParts[0], dateParts[1]-1, dateParts[2], timeParts[0], timeParts[1], timeParts[2]);
    return result;
}

var ajaxCall = function(url, callback){
    if (typeof callback == 'undefined'){
        callback = function(data){};
    }

    if (window.XDomainRequest) { //IE9-10 implements crossdomain AJAX this way only
        var xhr = new window.XDomainRequest();
        xhr.open('GET', url, true);
        xhr.onload = function() {
            callback(xhr.responseText);
        };
        xhr.send();
    } else {
        $.get(url, callback);
    }
}

var getNewLocation = function(currentLocation){
    return currentLocation.replace(window.location.hash, '') + '#' + currencyCode+'-' + chartMode + '-' + selectedRange;
}

var countPercent = function(){
    var chart = $('#big-chart').highcharts();
    var axis = chart.xAxis[0].getExtremes();
    var begin = 0;
    var end = 0;
    for (var i = 0; i < chart.series[0].points.length; i++) {
        if(chart.series[0].points[i].x < axis.min){
            begin = chart.series[0].points[i].y;
            break;
        }
    }
    for (var i = 0; i < chart.series[0].points.length; i++) {
        if(chart.series[0].points[i].x >= axis.max) {
            end = chart.series[0].points[i-1].y;
            break;
        }
    }
    if (end === 0) {
        end = chart.series[0].points[chart.series[0].points.length-1].y;
    }
    if (begin === 0) {
        begin = chart.series[0].points[0].y;
    }
    var percent = (end-begin)*100/end;
    var diff = end-begin;
    if (percent > 0) {
        chart.setTitle(null, {
            style: {color: 'green'},
            text: "+" + diff.toFixed(2) + " (+" + percent.toFixed(2) + "%)"
        });
    } else {
        chart.setTitle(null, {
            style: {color: 'red'},
            text: diff.toFixed(2) + " (" + percent.toFixed(2) + "%)"
        });
    }
}

$(function(){
    renderMajorCurrencies();
    renderSecondaryCurrencies();


    var currentHash = window.location.hash;
    currentHash = currentHash.replace('#', '');
    currentHash = currentHash.split('-');

    currencyCode = currentHash[0];
    if (typeof currentHash[1] != 'undefined'){
        chartMode = currentHash[1];
    }

    selectedRange = currentHash[2];

    if (typeof currentHash[2] != 'undefined'){
        selectedRangeValue = rangesArray[selectedRange];
    } else {
        if (chartMode == 'volumes') {
            selectedRangeValue = defaultVolumesSelectedRangeValue;
        } else {
            selectedRangeValue = defaultPriceSelectedRangeValue;
        }
        selectedRange = searchKeyByVal(selectedRangeValue);
    }

    if ($.inArray(currencyCode, config.currencyOrder) == -1){
        currencyCode = 'USD';
        var currentLocation = document.location.href;
        var newLocation = getNewLocation(currentLocation);
        window.location.replace(newLocation);
    }
    if($.inArray(chartMode, ['averages', 'volumes']) == -1){
        chartMode = 'averages';
        var currentLocation = document.location.href;
        var newLocation = getNewLocation(currentLocation);
        window.location.replace(newLocation);
    }


    for(var slotNum = 0 ;slotNum < legendSlots; slotNum++){
        $('#slot'+slotNum+'-link').hide();
    }

    for(var slotNum in config.currencyOrder){
        var slotLegendLink_a = $('#slot'+slotNum+'-link a');
        slotLegendLink_a.text(config.currencyOrder[slotNum]);
        slotLegendLink_a.attr('href', '#'+config.currencyOrder[slotNum]);

        var slotLegendLink = $('#slot'+slotNum+'-link');
        slotLegendLink.attr('data-currencycode', config.currencyOrder[slotNum]);
        if (config.currencyOrder[slotNum] == currencyCode) {
            slotLegendLink.addClass('active');
        }
        slotLegendLink.show();
    }

    $('.currency-navigation li').click(function(event){
        event.preventDefault();
        event.stopPropagation();
        $('.currency-navigation li').removeClass('active');
        $(this).addClass('active');

        currencyCode = $(this).data('currencycode');
        var currentLocation = document.location.href;
        var newLocation = getNewLocation(currentLocation);
        window.location.replace(newLocation);

        $('#'+chartMode+'-chart').click();
    });


    $('#averages-chart').click(function(event){
        event.stopPropagation();
        event.preventDefault();
        if ($('#volumes-chart').hasClass('active')) 
            currentVolumesSelectedRangeValue = selectedRangeValue;
	
        $('#averages-chart').addClass('active');
        $('#volumes-chart').removeClass('active');

        $("#axis-type").show();

        selectedRangeValue = currentPriceSelectedRangeValue;
        selectedRange = searchKeyByVal(selectedRangeValue);

        chartMode = 'averages';
        var currentLocation = document.location.href;
        var newLocation = getNewLocation(currentLocation);
        window.location.replace(newLocation);

        renderPriceChart(currencyCode);
    });
    $('#volumes-chart').click(function(event){
        event.stopPropagation();
        event.preventDefault();
        if ($('#averages-chart').hasClass('active')) 
            currentPriceSelectedRangeValue = selectedRangeValue;

        $('#averages-chart').removeClass('active');
        $('#volumes-chart').addClass('active');

        $("#axis-type").hide();

        selectedRangeValue = currentVolumesSelectedRangeValue;
        selectedRange = searchKeyByVal(selectedRangeValue);

        if (config.chartType == 'logarithmic') {
            config.chartType = 'linear';
            $('.chart-type-switch').text(config.chartType);
            commonChartOptions.yAxis.type = config.chartType;
        }
 
        chartMode = 'volumes';
        var currentLocation = document.location.href;
        var newLocation = getNewLocation(currentLocation);
        window.location.replace(newLocation);

        renderVolumeChart(currencyCode);
    });

    $('.chart-type-switch').text(config.chartType);
    $('.chart-type-switch').on('click', function () {
        if (config.chartType == 'linear') {
            config.chartType = 'logarithmic';
        } else {
            config.chartType = 'linear';
        }
        $(this).text(config.chartType);
        commonChartOptions.yAxis.type = config.chartType;
        $('#' + chartMode + '-chart').click();
    });

    $('body').show();

    $('#'+chartMode+'-chart').click();

});

var searchKeyByVal = function(val){
    var needle = false;
    var keys = $.map(rangesArray, function(item, key) {
        if(item == val){
            needle = key;
        }
    });
    return needle;
}
var setNewRangeUrl = function(){
    var bigChart = $('#big-chart').highcharts();
    selectedRangeValue = bigChart.rangeSelector.selected;
    selectedRange = searchKeyByVal(selectedRangeValue);
    var currentLocation = document.location.href;
    var newLocation = getNewLocation(currentLocation);
    window.location.replace(newLocation);
}

var commonChartOptions = {
    chart: {
        spacingBottom: 0,
        spacingLeft: 0,
        spacingRight: 0,
        spacingTop: 0
    },
    subtitle: {
        style: {
            display: 'none'
        }
    },
    rangeSelector: {
        inputEnabled: true,
        inputPosition: {
            x: -90,
            y: 30
        }
    },
    xAxis: {
        type: 'datetime',
        ordinal: false
    },
    yAxis: {
        type: config.chartType
    },
    exporting: {
        buttons: {
            contextButton: {
                x: -1,
                y: 30,
                symbolSize: 12,
                text: 'export',
                theme: {
                    height: 14,
                    padding: 2,
                    strokeWidth: 1,
                    stroke: 'silver',
                    r: 0,
                },
            }
        }
    }
};

var renderPriceChart = function(currencyCode){
    document.title = currencyCode+' charts | BitcoinAverage - bitcoin price index';

    var data24hURL = config.apiHistoryIndexUrl + currencyCode + '/per_minute_24h_sliding_window.csv';
    var dataAllTimeURL = config.apiHistoryIndexUrl + currencyCode + '/per_day_all_time_history.csv';
    var dataMonthlyURL = config.apiHistoryIndexUrl + currencyCode + '/per_hour_monthly_sliding_window.csv';

    var data = [];
    ajaxCall(data24hURL, function(csv){
        $.each(csv.split('\n'), function(i, line){
            var values = line.split(',');
            if (i == 0 || line.length == 0 || values.length != 2){
                return;
            }

            var dateStr = values[0];
            var dateData = dateStr.split(' ');
            dateData[0] = dateData[0].split('-');
            dateData[1] = dateData[1].split(':');
            var dateInt = Date.UTC(dateData[0][0], dateData[0][1]-1, dateData[0][2], dateData[1][0], dateData[1][1], dateData[1][2]);
            data.push([dateInt,  parseFloat(values[1]) ]);
        });

        ajaxCall(dataMonthlyURL, function(csv){
            $.each(csv.split('\n'), function(i, line){
                var values = line.split(',');
                if (i == 0 || line.length == 0 || values.length != 4){
                    return;
                }
                data.push([parseDate(values[0]).getTime(), parseFloat(values[3]) ]);
            });

            ajaxCall(dataAllTimeURL, function(csv){
                $.each(csv.split('\n'), function(i, line){
                    var values = line.split(',');
                    if (i == 0 || line.length == 0 || values.length != 5){
                        return;
                    }
                    data.push([parseDate(values[0]).getTime(), parseFloat(values[3]) ]);
                });

                data.sort(function(a,b){
                    if (a[0] > b[0]){
                        return 1;
                    } else if (a[0] < b[0]){
                        return -1;
                    } else {
                        return -0;
                    }
                });

                $('#big-chart').highcharts('StockChart', $.extend(true, {
                    chart : {
                        events: {
                            redraw: function(event) {
                                setTimeout( 'setNewRangeUrl()', 1000);
                                countPercent();
                            }
                        }
                    },

                    title: { text: currencyCode+' average price history'},
                    rangeSelector: {
                        buttons: buttons,
                        selected: selectedRangeValue
                    },


                    xAxis:{
                        tickPixelInterval: 100
                    },

                    yAxis:{
                        tickPixelInterval: 50
                    },
                    tooltip:{
                        valueDecimals: 2,
                        valuePrefix:currencyCode+' '

                    },

                    plotOptions:{
                        series:{
                            dataGrouping:{
                                groupPixelWidth:1,
                                units: [
                                        ['minute', [1, 2, 5, 10, 15, 22, 30]],
                                        ['hour', [1, 2, 3, 6, 8, 10, 12]],
                                        ['day',[1]]
                                        ]
                            },
                            name: "Average Price"
                        }
                    },

                    series : [{
                        data: data
                    }]
                }, commonChartOptions));
                countPercent();
            });
        });
    });
}

var renderVolumeChart = function(currencyCode){
    document.title = currencyCode+' charts | BitcoinAverage - bitcoin price index';

    var dataVolumesURL = config.apiHistoryIndexUrl + currencyCode + '/volumes.csv';
    var dataSeries = [];
    var exchangesHeaders = {};

    ajaxCall(dataVolumesURL, function(csv){
        $.each(csv.split('\n'), function(i, line){
            var values = line.split(',');

            if (i == 0){
                for(var columnNum in values){
                    var regexp = new RegExp('^[a-zA-Z0-9_]{1,} BTC$');
                    if (regexp.test(values[columnNum])) {
                        exchangesHeaders[columnNum] = values[columnNum].replace(' BTC', '');
                    }
                }
                var index = 0;
                for (var columnNum in exchangesHeaders) {
                    var exchName = exchangesHeaders[columnNum];
                    dataSeries[index] = {
                        type: 'area',
                        data: [],
                        name: exchName,
                        color: config.exchangesColors[exchName],
                    };
                    index++;
                }
                return;
            }
            if(line.length == 0){
                return;
            }
            for(var columnNum in exchangesHeaders){
                for(var dataSeriesIndex in dataSeries){
                    if (dataSeries[dataSeriesIndex].name == exchangesHeaders[columnNum]){
                        var val = values[columnNum];
                        if (!val) {
                            val = 0;
                        }
                        dataSeries[dataSeriesIndex].data.push([
                            parseDate(values[0]).getTime(),
                            parseFloat(val)
                        ]);
                    }
                }
            }
        });

        $('#big-chart').highcharts('StockChart', $.extend(true, {
            chart : {
                events: {
                    redraw: function(event) {
                        setTimeout( 'setNewRangeUrl()', 1000);
                        countPercent();
                    }
                }
            },

            title: { text: currencyCode+' daily volumes history'},
            rangeSelector: {
                buttons: buttons,
                selected: selectedRangeValue
            },

            xAxis:{
                tickPixelInterval: 100
            },

            yAxis:{
                tickPixelInterval: 50
            },

            plotOptions:{
                area:{
                    stacking: 'normal'
                },
                series:{
                    dataGrouping:{
                        groupPixelWidth:25,
                        units: [
                                ['minute', [1, 2, 5, 10, 15, 22, 30]],
                                ['hour', [1, 2, 3, 6, 8, 10, 12]],
                                ['day',[1]]
                                ]
                    }
                }
            },

            series : dataSeries,
            tooltip:{
                valueDecimals: 2,
                formatter: function() {
                    var s = Highcharts.dateFormat('%A, %b %e, %Y', this.x) +'<br/>';
                    this.points.sort(function(a,b){return b.y - a.y});
                    $.each(this.points, function(i, point) {
                        s +='<span style="color:'+point.series.color+'">'+point.series.name+'</span>: <b> BTC '+point.y+'</b><br/>';
                    });
                    return s;
                }
            }
        }, commonChartOptions));
    });
}

var getRandomArbitrary = function(min, max) {
  return Math.random() * (max - min) + min;
}
</script>

<style>
    .chart-controls {
        margin-top: 10px;
        text-align: center;
    }
    .chart-type-switch {
        cursor: pointer;
    }
    .responsive-banner-home { width: 320px; height: 50px; }
    @media(min-width: 500px) { .responsive-banner-home { width: 468px; height: 60px; } }
    @media(min-width: 800px) { .responsive-banner-home { width: 728px; height: 90px; } }
</style>

</head>
<body>

    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand logo" href="https://bitcoinaverage.com/" itemprop="url">
                    <span itemprop="name">BitcoinAverage</span>
                </a>
                <h1 class="navbar-brand slogan hidden-xs hidden-sm" itemprop="description">bitcoin price index</h1>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li><a class="submenu" href="explain.htm">INDEX FORMULA</a></li>
                    <li><a class="submenu" href="markets.htm">MARKETS</a></li>
                    <li><a class="submenu" href="charts.htm">CHARTS</a></li>
                    <!--<li><a class="submenu" href="blog.htm">BLOG</a></li>-->
                    <li><a class="submenu" href="faq.htm">FAQ</a></li>
                    <li><a class="submenu" href="api.htm">API</a></li>
                </ul>
            </div>
        </div>
    </div>

    <div id="main-container" class="container">
        <div style="border-top: 1px solid #dadada; margin-top: 25px !important;" class="row show-grid currency-box col-md-12">
            <ul class="currency-navigation primary-currency-switch col-md-5 col-sm-12 col-xs-12"></ul>
            <ul class="currency-navigation secondary-currency-switch col-md-4 col-sm-6 col-xs-8"></ul>
        </div>
        <div id="big-chart" class="col-lg-10 col-lg-offset-1 col-md-8 col-md-offset-2 col-sm-12 col-sm-offset-0 v-offset4"></div>
        <div id="axis-type" class="col-md-8 col-md-offset-2 chart-controls">axis type: <a class="chart-type-switch"></a></div>
        <div class="row text-center">
            <div style="font-weight: bold;">
                <ul class="pagination">
                    <li id="averages-chart"><a href="">average price</a></li>
                    <li id="volumes-chart"><a href="">trading volumes</a></li>
                </ul>
            </div>
        </div>
    </div> <!-- container end -->

    <div class="ba-ads-left"></div>

    <div class="ba-ads-right">
        <p>just ads</p>
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- Responsive Banner leaderboard -->
        <ins class="adsbygoogle"
             style="display:inline-block;width:160px;height:600px"
             data-ad-client="ca-pub-9795175343560011"
             data-ad-slot="8506292480"></ins>
        <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>

    <div class="ba-ads-bottom">
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- Responsive Banner Home -->
        <ins class="adsbygoogle responsive-banner-home"
             style="display:inline-block"
             data-ad-client="ca-pub-9795175343560011"
             data-ad-slot="2647586483"></ins>
        <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>

    <footer class="footer clearfix">
        <div class="container">
            <div class="row">
                <div class="f_left foot_left">
                     <section>
                        <h4><span>Support Us</span></h4>
                            <span style="font-size: 80%">
                                <a href="bitcoin:1EQDEEbYJuevPpJsDczQzspTV8GRTCpk1T?label=Donation%20to%20BitcoinAverage.com">1EQDEEbYJuevPpJsDczQzspTV8GRTCpk1T</a>
                                &nbsp;&nbsp;&nbsp;
                                <a href="img/donation_url_qrcode.png" data-lightbox="image-1" title="BitcoinAverage.com donation address">qr code</a>
                            </span>
                    </section>
                </div>
                <div class="privacy">
                    2014 &nbsp; CC-BY-NC-SA &nbsp; BITCOINAVERAGE
                </div>
                <div class="f_right foot_right" style="text-align: right">
                    <section id="section-connect">
                        <h4><span>Connect with us</span></h4>
                        <a href="https://github.com/bitcoinaverage/bitcoinaverage" target="_blank" title="github"><span class="icon-stack">
                                <i class="icon-circle icon-stack-base icon-1x"></i>
                                <i class="icon-github icon-light"></i>
                            </span>
                        </a>
                        <a href="https://bitcointalk.org/index.php?topic=270190.0" target="_blank" title="bitcointalk thread">
                            <span class="icon-stack">
                                <i class="icon-circle icon-stack-base"></i>
                                <i class="icon-comment icon-light"></i>
                            </span>
                        </a>
                        <a href="https://twitter.com/BitcoinAverage" target="_blank" title="twitter">
                            <span class="icon-stack">
                                <i class="icon-circle icon-stack-base"></i>
                                <i class="icon-twitter icon-light"></i>
                            </span>
                        </a>
                        <a href="mailto:bitcoinaverage@gmail.com" title="email">
                            <span class="icon-stack">
                                <i class="icon-circle icon-stack-base"></i>
                                <i class="icon-envelope icon-light"></i>
                            </span>
                        </a>
                    </section>
                </div>
            </div>
        </div>
    </footer><!-- /footer -->
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-42688472-1', 'bitcoinaverage.com');ga('send', 'pageview');
</script>
</body>
</html>
